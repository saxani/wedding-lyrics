{"version":3,"sources":["components/Letters.js","components/Lyrics.js","components/Submit.js","App.js","reportWebVitals.js","index.js"],"names":["Letters","_ref","lyrics","onComplete","react_default","a","createElement","framer_motion","map","item","index","length","span","initial","opacity","translateY","animate","exit","transition","duration","delay","className","key","onAnimationComplete","randomizer","data","Math","floor","random","Lyrics","_useState","useState","_useState2","Object","slicedToArray","songNum","setSongNum","_useState3","_useState4","instance","setInstance","useEffect","lyricsLetters","split","components_Letters","setTimeout","Submit","modalIsOpen","setIsOpen","artist","setArtist","_useState5","_useState6","setLyrics","closeModal","_submitLyrics","asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","fetch","method","mode","credentials","headers","Content-Type","body","JSON","stringify","then","response","json","console","log","catch","err","stop","apply","this","arguments","style","position","bottom","left","transform","onClick","lib_default","isOpen","ariaHideApp","onRequestClose","content","top","right","marginRight","contentLabel","onChange","target","value","_x","App","serverData","setServerData","callBackendAPI","res","App_regeneratorRuntime","sent","status","Error","message","abrupt","components_Lyrics","components_Submit","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.0a8dacf2.chunk.js","sourcesContent":["import React from 'react';\nimport{ AnimatePresence, motion } from 'framer-motion/dist/framer-motion';\n\nconst Letters = ({ lyrics, onComplete }) => {\n    return (\n        <AnimatePresence>\n            {lyrics.map((item, index) => {\n                if (index === lyrics.length-1) {\n                    return (\n                        <motion.span \n                            initial={{ opacity: 0, translateY: 10 }} \n                            animate={{ opacity: 1, translateY: 0 }} \n                            exit={{ opacity: 0 }}\n                            transition={{ duration: 0.5, delay: index * 0.1 }}\n                            className='letter' \n                            key={index}\n                            onAnimationComplete={ onComplete }\n                        >\n                            {item === ' ' ? `\\u0020` : item}\n                        </motion.span>\n                    );\n                }\n\n                return (\n                    <motion.span \n                        initial={{ opacity: 0, translateY: 10 }} \n                        animate={{ opacity: 1, translateY: 0 }} \n                        exit={{ opacity: 0 }}\n                        transition={{ duration: 0.5, delay: index * 0.1 }}\n                        className='letter' \n                        key={index}\n                    >\n                        {item === ' ' ? `\\u0020` : item}\n                    </motion.span>\n                );\n        \n            })}\n        </AnimatePresence>\n    );\n       \n    \n};\nexport default Letters;","import React, { useState, useEffect } from 'react';\nimport Letters from './Letters';\nimport '../App.css';\n\nfunction randomizer(data) {\n    let num = Math.floor(Math.random() * data.length);\n\n    return num;\n}\n\nconst Lyrics = ({ data }) => {\n    const [songNum, setSongNum] = useState(randomizer(data));\n    const [instance, setInstance] = useState(1);\n\n    useEffect(() => {\n        setSongNum(randomizer(data));                         \n    }, []);\n\n    const onComplete = () => {\n        setTimeout(() => {\n            setSongNum(randomizer(data));\n            let tempInstance = instance + 1;\n            setInstance(tempInstance);\n        }, 5000);\n    };\n\n    const lyricsLetters = data[songNum].lyrics.split('');\n   \n    return (\n        <div className='lyrics-wrapper'>\n            <div className='lyrics'>\n                <Letters lyrics={lyricsLetters} onComplete={onComplete} key={instance} />\n            </div>\n        </div>\n    );\n};\n\nexport default Lyrics;","import React, { useState } from \"react\";\nimport Modal from 'react-modal';\n\nconst Submit = () => {\n    const [modalIsOpen, setIsOpen] = useState(false);\n    const [artist, setArtist] = useState('');\n    const [lyrics, setLyrics] = useState('');\n\n    const customStyles = {\n        content: {\n            top: '50%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            marginRight: '-50%',\n            transform: 'translate(-50%, -50%)',\n        },\n    };\n\n    const buttonStyle = {\n        position: 'absolute',\n        bottom: '50px',\n        left: '50%',\n        transform: 'translateX(-50%)'\n    };\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    async function submitLyrics(e) {\n        e.preventDefault();\n        const data = { artist: artist, lyrics: lyrics };\n\n        await fetch('/add_lyrics', {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            // cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            // redirect: 'follow', // manual, *follow, error\n            // referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n          })\n            .then(response => response.json())\n            .then(json => {\n                console.log(json);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <div>\n            {!modalIsOpen && <button style={buttonStyle} onClick={openModal}>Open Modal</button>}\n            <Modal\n            isOpen={modalIsOpen}\n            ariaHideApp={false}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Submit modal\"\n            >\n                <button onClick={closeModal}>X</button>\n                <h2>What lyrics remind you of Jor and Meg?</h2>\n                <form>\n                    <div>\n                        Artist: \n                        <input onChange={(e) => setArtist(e.target.value)} value={artist} />\n                    </div>\n                    <div>\n                        Lyrics: \n                        <input onChange={(e) => setLyrics(e.target.value)} value={lyrics} />\n                    </div>\n                    <button onClick={submitLyrics}>Submit</button>\n                </form>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Submit;","import React, { useState, useEffect } from 'react';\nimport Lyrics from './components/Lyrics';\nimport Submit from './components/Submit';\nimport './App.css';\n\nconst App = () => {\n  const [serverData, setServerData] = useState('');\n\n  useEffect(() => {\n    callBackendAPI()\n      .then(res => setServerData(res.lyrics))\n      .catch(err => console.log(err));\n  }, []);\n\n  const callBackendAPI = async () => {\n    const response = await fetch('/fetch_lyrics');\n    const body = await response.json();\n    console.log(body);\n    \n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  return (\n    <div className=\"app\">\n        {serverData && <Lyrics data={serverData} />}\n        <Submit />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}